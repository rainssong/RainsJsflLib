document = fl.getDocumentDOM();fill = document.getCustomFill( "toolbar" );fl.outputPanel.clear();var output = "";if( fill.style == "solid" ){	if( fill.color.length == 9 )	{		a = Math.round( ( parseInt( "0x" + fill.color.substr( 7, 2 ) ) / 255 ) * 100 ) / 100;		output += "beginFill(0x" + fill.color.substr( 1, 6 ).toUpperCase() + ", " + a + ");";	}	else	{		output += "beginFill(0x" + fill.color.substr( 1, 6 ).toUpperCase() + ", 1);";	}	}else if( fill.style == "linearGradient" ){	output += "beginGradientFill(GradientType.LINEAR, ";}else if( fill.style == "radialGradient" ){	output += "beginGradientFill(GradientType.RADIAL, ";}if( fill.style != "solid" ){ 	c = new Array();	a = new Array()	for( i = 0; i < fill.colorArray.length; i++ )	{		fl.trace( fill.colorArray[ i ] );		if( fill.colorArray[ i ].length == 9 )		{			c.push( "0x" + fill.colorArray[ i ].substr( 1, 6 ).toUpperCase() );			a.push( Math.round( ( parseInt( "0x" + fill.colorArray[ i ].substr( 7, 2 ) ) / 255 ) * 100 ) / 100 );		}		else		{			c.push( "0x" + fill.colorArray[ i ].substr( 1, 6 ).toUpperCase() );			a.push( 1 );		}	}		output += "[" + c.join( ", " ) + "], [" + a.join( ", " ) + "], [" + fill.posArray.join( ", " ) + "]);";}fl.clipCopyString( output );fl.trace( output );